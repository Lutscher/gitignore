{"google":"","tagline":"A collection of useful .gitignore templates","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Gitignore","body":"# A Collection of Useful .gitignore Templates\r\n\r\nThat's what we're trying to build. Please contribute\r\nby [forking][fk] and sending a [pull request][pr].\r\n\r\nAlso **please** only modify **one file** per commit. This'll\r\nmake merging easier for everyone.\r\n\r\nGlobal gitignores (OS-specific, editor-specific) should go into the\r\n`Global/` directory.\r\n\r\nFor more information on gitignore: [gitignore(5)][g5]\r\n\r\n[fk]: http://help.github.com/forking/\r\n[pr]: http://help.github.com/pull-requests/\r\n[g5]: http://man.cx/gitignore\r\n\r\n## Pull Requests\r\n\r\nSince this repo includes a large and diverse\r\nnumber of programming languages, frameworks, editors,\r\nand ecosystems, it's **very helpful** if you can provide \r\na link to information supporting your pull request. \r\nUp-to-date, canonical documentation that mentions the files \r\nto be ignored is best.\r\n\r\nThis ensures we can efficiently go through pull requests\r\nand keep quality high.\r\n\r\n## Global Ignores\r\n\r\ngit has a global configuration that applies rules to all of\r\nyour projects. For example:\r\n\r\n    git config --global core.excludesfile ~/.global_ignore\r\n\r\n... will apply the rules in ~/.global_ignore for all of your repos.\r\n\r\nThis is useful if you use an editor (like Emacs) that drops backup files,\r\nor if you work in an environment that generates binary or intermediate\r\nfiles that are always ignored.\r\n"}